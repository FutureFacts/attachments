name: Release Stable to PyPI

on:
  push:
    tags:
      - 'v*.*.*'  # Glob match for stable tags like v0.13.0, v1.0.0 (no pre-release suffix)
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v0.23.1). Leave empty to use latest tag on this ref.'
        required: false

jobs:
  release-stable:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write  # Required for trusted publishing to PyPI
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Generate DSL cheatsheet
        run: |
          pip install -e .
          python scripts/generate_dsl_cheatsheet.py

      - name: Build package
        run: python -m build

      - name: Verify package
        run: |
          python -m twine check dist/*
          echo "📦 Package contents:"
          ls -la dist/

      - name: Publish to PyPI (token)
        if: ${{ secrets.PYPI_API_TOKEN != '' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          print-hash: true
          verbose: true

      - name: Publish to PyPI (trusted)
        if: ${{ secrets.PYPI_API_TOKEN == '' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
          verbose: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          name: "Release ${{ steps.meta.outputs.tag }}"
          body: |
            🎉 **Stable Release**: Production-ready version with new features and improvements.
            
            **Installation:**
            ```bash
            pip install attachments
            # or explicitly:
            pip install attachments==${{ steps.meta.outputs.version }}
            ```
            
            **What's new in this release:**
            - 🔍 Enhanced DSL cheatsheet with types, defaults, and allowable values
            - 📊 Automatic DSL command discovery and documentation
            - 🚀 Improved logging and verbosity system
            - 🛠️ Better error messages and suggestions
            
            See [CHANGELOG.md](https://github.com/MaximeRivest/attachments/blob/main/CHANGELOG.md) for full details.
          prerelease: false
      - name: Compute release metadata
        id: meta
        run: |
          TAG="${{ github.ref_type == 'tag' && github.ref_name || inputs.tag }}"
          if [ -z "$TAG" ]; then
            # Fallback to latest tag reachable from this commit
            TAG="$(git describe --tags --abbrev=0)"
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "version=${TAG#v}" >> "$GITHUB_OUTPUT"
          files: dist/* 
